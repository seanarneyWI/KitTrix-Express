
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.KittingJobScalarFieldEnum = {
  id: 'id',
  customerName: 'customerName',
  companyId: 'companyId',
  jobNumber: 'jobNumber',
  dueDate: 'dueDate',
  orderedQuantity: 'orderedQuantity',
  runLength: 'runLength',
  customerSpec: 'customerSpec',
  description: 'description',
  setup: 'setup',
  makeReady: 'makeReady',
  takeDown: 'takeDown',
  expectedKitDuration: 'expectedKitDuration',
  expectedJobDuration: 'expectedJobDuration',
  scheduledDate: 'scheduledDate',
  scheduledStartTime: 'scheduledStartTime',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RouteStepScalarFieldEnum = {
  id: 'id',
  name: 'name',
  expectedSeconds: 'expectedSeconds',
  order: 'order',
  instructionType: 'instructionType',
  instructionUrl: 'instructionUrl',
  instructionText: 'instructionText',
  autoLoop: 'autoLoop',
  kittingJobId: 'kittingJobId'
};

exports.Prisma.JobProgressScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  startTime: 'startTime',
  endTime: 'endTime',
  actualJobDuration: 'actualJobDuration',
  completedKits: 'completedKits',
  remainingKits: 'remainingKits',
  currentKitNumber: 'currentKitNumber',
  isActive: 'isActive',
  pausedTime: 'pausedTime',
  workCenterId: 'workCenterId',
  assignedWorker: 'assignedWorker',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KitExecutionScalarFieldEnum = {
  id: 'id',
  jobProgressId: 'jobProgressId',
  kitNumber: 'kitNumber',
  startTime: 'startTime',
  endTime: 'endTime',
  actualDuration: 'actualDuration',
  completed: 'completed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StepExecutionScalarFieldEnum = {
  id: 'id',
  kitExecutionId: 'kitExecutionId',
  routeStepId: 'routeStepId',
  startTime: 'startTime',
  endTime: 'endTime',
  actualDuration: 'actualDuration',
  completed: 'completed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobAnalyticsScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  totalExpectedTime: 'totalExpectedTime',
  totalActualTime: 'totalActualTime',
  efficiencyPercent: 'efficiencyPercent',
  avgKitTime: 'avgKitTime',
  fastestKitTime: 'fastestKitTime',
  slowestKitTime: 'slowestKitTime',
  stepAnalytics: 'stepAnalytics',
  timeVariance: 'timeVariance',
  consistencyScore: 'consistencyScore',
  onTimeCompletion: 'onTimeCompletion',
  qualityIssues: 'qualityIssues',
  lastCalculated: 'lastCalculated',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  role: 'role',
  workCenterId: 'workCenterId',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkCenterScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobAssignmentScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  userId: 'userId',
  assignedAt: 'assignedAt',
  assignedBy: 'assignedBy',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  companyName: 'companyName',
  ctp: 'ctp',
  nonPrintContributionPerSqft: 'nonPrintContributionPerSqft',
  miles: 'miles',
  fpp: 'fpp',
  address1: 'address1',
  address2: 'address2',
  address3: 'address3',
  address4: 'address4',
  phoneNumber: 'phoneNumber',
  customerId: 'customerId',
  shipTo: 'shipTo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  discountRate: 'discountRate',
  active: 'active'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.JobStatus = exports.$Enums.JobStatus = {
  SCHEDULED: 'SCHEDULED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  PAUSED: 'PAUSED',
  CANCELLED: 'CANCELLED'
};

exports.UserRole = exports.$Enums.UserRole = {
  WORKER: 'WORKER',
  SUPERVISOR: 'SUPERVISOR',
  ADMIN: 'ADMIN'
};

exports.InstructionType = exports.$Enums.InstructionType = {
  NONE: 'NONE',
  VIDEO: 'VIDEO',
  IMAGE: 'IMAGE',
  TEXT: 'TEXT'
};

exports.Prisma.ModelName = {
  KittingJob: 'KittingJob',
  RouteStep: 'RouteStep',
  JobProgress: 'JobProgress',
  KitExecution: 'KitExecution',
  StepExecution: 'StepExecution',
  JobAnalytics: 'JobAnalytics',
  User: 'User',
  WorkCenter: 'WorkCenter',
  JobAssignment: 'JobAssignment',
  Company: 'Company'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/motioseanmbp/Documents/GitHub/CursorTest/KitTrix-Express/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/motioseanmbp/Documents/GitHub/CursorTest/KitTrix-Express/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel KittingJob {\n  id              String   @id @default(cuid())\n  customerName    String\n  companyId       Int?\n  company         Company? @relation(fields: [companyId], references: [id], onDelete: SetNull, onUpdate: Cascade)\n  jobNumber       String   @unique\n  dueDate         DateTime\n  orderedQuantity Int\n  runLength       Int\n  customerSpec    String?\n  description     String\n  setup           Int // seconds\n  makeReady       Int // seconds\n  takeDown        Int // seconds\n\n  // Calculated fields\n  expectedKitDuration Int // EKD in seconds\n  expectedJobDuration Int // EJD in seconds\n\n  // Scheduling\n  scheduledDate      DateTime?\n  scheduledStartTime String?\n\n  // Status tracking\n  status    JobStatus @default(SCHEDULED)\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n\n  // Relations\n  routeSteps  RouteStep[]\n  jobProgress JobProgress?\n  analytics   JobAnalytics?\n  assignments JobAssignment[]\n\n  @@map(\"kitting_jobs\")\n}\n\nmodel RouteStep {\n  id              String @id @default(cuid())\n  name            String\n  expectedSeconds Int\n  order           Int // For maintaining step sequence\n\n  // Multimedia instruction fields\n  instructionType InstructionType @default(NONE)\n  instructionUrl  String? // External URL for videos/images\n  instructionText String? // Text instructions\n  autoLoop        Boolean         @default(true) // Auto-loop for videos\n\n  // Relations\n  kittingJobId String\n  kittingJob   KittingJob @relation(fields: [kittingJobId], references: [id], onDelete: Cascade)\n\n  // Step executions during job runs\n  stepExecutions StepExecution[]\n\n  @@map(\"route_steps\")\n}\n\nmodel JobProgress {\n  id         String     @id @default(cuid())\n  jobId      String     @unique\n  kittingJob KittingJob @relation(fields: [jobId], references: [id], onDelete: Cascade)\n\n  // Job timing\n  startTime         DateTime?\n  endTime           DateTime?\n  actualJobDuration Int? // seconds\n\n  // Kit tracking\n  completedKits    Int  @default(0)\n  remainingKits    Int\n  currentKitNumber Int?\n\n  // Status\n  isActive   Boolean @default(false)\n  pausedTime Int     @default(0) // accumulated pause time in seconds\n\n  // Work center assignment\n  workCenterId   String?\n  workCenter     WorkCenter? @relation(fields: [workCenterId], references: [id])\n  assignedWorker String?\n\n  // Relations\n  kitExecutions KitExecution[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"job_progress\")\n}\n\nmodel KitExecution {\n  id            String      @id @default(cuid())\n  jobProgressId String\n  jobProgress   JobProgress @relation(fields: [jobProgressId], references: [id], onDelete: Cascade)\n\n  kitNumber      Int\n  startTime      DateTime\n  endTime        DateTime?\n  actualDuration Int? // seconds\n  completed      Boolean   @default(false)\n\n  // Relations\n  stepExecutions StepExecution[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"kit_executions\")\n}\n\nmodel StepExecution {\n  id             String       @id @default(cuid())\n  kitExecutionId String\n  kitExecution   KitExecution @relation(fields: [kitExecutionId], references: [id], onDelete: Cascade)\n\n  routeStepId String\n  routeStep   RouteStep @relation(fields: [routeStepId], references: [id])\n\n  startTime      DateTime\n  endTime        DateTime?\n  actualDuration Int? // seconds\n  completed      Boolean   @default(false)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"step_executions\")\n}\n\nmodel JobAnalytics {\n  id         String     @id @default(cuid())\n  jobId      String     @unique\n  kittingJob KittingJob @relation(fields: [jobId], references: [id], onDelete: Cascade)\n\n  // Overall job analytics\n  totalExpectedTime Int // seconds\n  totalActualTime   Int? // seconds\n  efficiencyPercent Float? // actual vs expected\n\n  // Kit analytics\n  avgKitTime     Float? // average actual kit time\n  fastestKitTime Int? // seconds\n  slowestKitTime Int? // seconds\n\n  // Step analytics\n  stepAnalytics Json? // detailed step-by-step analytics\n\n  // Variance tracking\n  timeVariance     Float? // standard deviation of kit times\n  consistencyScore Float? // how consistent the worker was\n\n  // Business metrics\n  onTimeCompletion Boolean? // completed by due date\n  qualityIssues    Int      @default(0) // count of reported issues\n\n  lastCalculated DateTime @default(now())\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  @@map(\"job_analytics\")\n}\n\nenum JobStatus {\n  SCHEDULED\n  IN_PROGRESS\n  COMPLETED\n  PAUSED\n  CANCELLED\n}\n\nenum UserRole {\n  WORKER\n  SUPERVISOR\n  ADMIN\n}\n\nenum InstructionType {\n  NONE\n  VIDEO\n  IMAGE\n  TEXT\n}\n\nmodel User {\n  id           String      @id @default(cuid())\n  name         String\n  email        String      @unique\n  role         UserRole    @default(WORKER)\n  workCenterId String?\n  workCenter   WorkCenter? @relation(fields: [workCenterId], references: [id])\n  isActive     Boolean     @default(true)\n  createdAt    DateTime    @default(now())\n  updatedAt    DateTime    @updatedAt\n\n  // Relations\n  assignedJobs JobAssignment[]\n\n  @@map(\"users\")\n}\n\nmodel WorkCenter {\n  id          String   @id @default(cuid())\n  name        String // \"Line A\", \"Pack Station 2\", etc.\n  description String?\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  users       User[]\n  jobProgress JobProgress[]\n\n  @@map(\"work_centers\")\n}\n\nmodel JobAssignment {\n  id         String   @id @default(cuid())\n  jobId      String\n  userId     String\n  assignedAt DateTime @default(now())\n  assignedBy String // Admin/Supervisor who made assignment\n  isActive   Boolean  @default(true)\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  // Relations\n  job  KittingJob @relation(fields: [jobId], references: [id])\n  user User       @relation(fields: [userId], references: [id])\n\n  @@unique([jobId, userId]) // Prevent duplicate assignments\n  @@map(\"job_assignments\")\n}\n\nmodel Company {\n  id                          Int       @id @default(autoincrement())\n  companyName                 String    @map(\"company_name\")\n  ctp                         Int?\n  nonPrintContributionPerSqft Decimal?  @map(\"non_print_contribution_per_sqft\") @db.Decimal(10, 6)\n  miles                       Int?\n  fpp                         Int?\n  address1                    String?\n  address2                    String?\n  address3                    String?\n  address4                    String?\n  phoneNumber                 String?   @map(\"phone_number\")\n  customerId                  String?   @map(\"customer_id\")\n  shipTo                      String?   @map(\"ship_to\")\n  createdAt                   DateTime? @default(now()) @map(\"created_at\")\n  updatedAt                   DateTime? @default(now()) @updatedAt @map(\"updated_at\")\n  discountRate                Decimal?  @default(0) @db.Decimal(5, 2)\n  active                      Boolean?  @default(true)\n\n  // Relations\n  kittingJobs KittingJob[]\n\n  @@map(\"companies\")\n}\n",
  "inlineSchemaHash": "ad21685a95e5168a6288d9b19ff950dd61a45e9a155382a8dc18231ceee4c057",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"KittingJob\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToKittingJob\"},{\"name\":\"jobNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderedQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"runLength\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerSpec\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"setup\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"makeReady\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"takeDown\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expectedKitDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expectedJobDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"scheduledDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scheduledStartTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"JobStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"routeSteps\",\"kind\":\"object\",\"type\":\"RouteStep\",\"relationName\":\"KittingJobToRouteStep\"},{\"name\":\"jobProgress\",\"kind\":\"object\",\"type\":\"JobProgress\",\"relationName\":\"JobProgressToKittingJob\"},{\"name\":\"analytics\",\"kind\":\"object\",\"type\":\"JobAnalytics\",\"relationName\":\"JobAnalyticsToKittingJob\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"JobAssignment\",\"relationName\":\"JobAssignmentToKittingJob\"}],\"dbName\":\"kitting_jobs\"},\"RouteStep\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expectedSeconds\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"instructionType\",\"kind\":\"enum\",\"type\":\"InstructionType\"},{\"name\":\"instructionUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instructionText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"autoLoop\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"kittingJobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kittingJob\",\"kind\":\"object\",\"type\":\"KittingJob\",\"relationName\":\"KittingJobToRouteStep\"},{\"name\":\"stepExecutions\",\"kind\":\"object\",\"type\":\"StepExecution\",\"relationName\":\"RouteStepToStepExecution\"}],\"dbName\":\"route_steps\"},\"JobProgress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kittingJob\",\"kind\":\"object\",\"type\":\"KittingJob\",\"relationName\":\"JobProgressToKittingJob\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualJobDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"completedKits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"remainingKits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentKitNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"pausedTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workCenterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workCenter\",\"kind\":\"object\",\"type\":\"WorkCenter\",\"relationName\":\"JobProgressToWorkCenter\"},{\"name\":\"assignedWorker\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitExecutions\",\"kind\":\"object\",\"type\":\"KitExecution\",\"relationName\":\"JobProgressToKitExecution\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"job_progress\"},\"KitExecution\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobProgressId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobProgress\",\"kind\":\"object\",\"type\":\"JobProgress\",\"relationName\":\"JobProgressToKitExecution\"},{\"name\":\"kitNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stepExecutions\",\"kind\":\"object\",\"type\":\"StepExecution\",\"relationName\":\"KitExecutionToStepExecution\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"kit_executions\"},\"StepExecution\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitExecutionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitExecution\",\"kind\":\"object\",\"type\":\"KitExecution\",\"relationName\":\"KitExecutionToStepExecution\"},{\"name\":\"routeStepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"routeStep\",\"kind\":\"object\",\"type\":\"RouteStep\",\"relationName\":\"RouteStepToStepExecution\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"step_executions\"},\"JobAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kittingJob\",\"kind\":\"object\",\"type\":\"KittingJob\",\"relationName\":\"JobAnalyticsToKittingJob\"},{\"name\":\"totalExpectedTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalActualTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"efficiencyPercent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"avgKitTime\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fastestKitTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"slowestKitTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stepAnalytics\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"timeVariance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"consistencyScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"onTimeCompletion\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"qualityIssues\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastCalculated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"job_analytics\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"workCenterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workCenter\",\"kind\":\"object\",\"type\":\"WorkCenter\",\"relationName\":\"UserToWorkCenter\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assignedJobs\",\"kind\":\"object\",\"type\":\"JobAssignment\",\"relationName\":\"JobAssignmentToUser\"}],\"dbName\":\"users\"},\"WorkCenter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWorkCenter\"},{\"name\":\"jobProgress\",\"kind\":\"object\",\"type\":\"JobProgress\",\"relationName\":\"JobProgressToWorkCenter\"}],\"dbName\":\"work_centers\"},\"JobAssignment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assignedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"KittingJob\",\"relationName\":\"JobAssignmentToKittingJob\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"JobAssignmentToUser\"}],\"dbName\":\"job_assignments\"},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_name\"},{\"name\":\"ctp\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nonPrintContributionPerSqft\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"non_print_contribution_per_sqft\"},{\"name\":\"miles\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fpp\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"address1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address3\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address4\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"phone_number\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"customer_id\"},{\"name\":\"shipTo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ship_to\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"discountRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"kittingJobs\",\"kind\":\"object\",\"type\":\"KittingJob\",\"relationName\":\"CompanyToKittingJob\"}],\"dbName\":\"companies\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

